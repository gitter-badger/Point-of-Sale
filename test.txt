

// SHOW SINGLE
router.get("/:id", function (req, res) {
    // Get all campgrounds from DB
    order.find({}, function (err, allOrders) {
        if (err) {
            console.log(err);
        } else {
            res.render("campgrounds/index", {Orders: allOrders});
        }
    });
});

//CREATE - add new campground to DB
router.post("/",middleware.isLoggedIn, function (req, res) {
    // get data from form and add to campgrounds array
    var name = req.body.name;
    var image = req.body.image;
    var desc = req.body.description;

    var author = {
        id: req.user._id,
        username: req.user.username
    };
    var newCampground = {name: name, image: image, description: desc, author: author};
    // Create a new campground and save to DB
    Campground.create(newCampground, function (err, newlyCreated) {
        if (err) {
            console.log(err);
        } else {
            //redirect back to campgrounds page
            res.redirect("/campgrounds");
        }
    });
});

//NEW - show form to create new campground
router.get("/new",middleware.isLoggedIn, function (req, res) {
    res.render("campgrounds/new");
});

// SHOW - shows more info about one campground
router.get("/:id", function (req, res) {
    //find the campground with provided ID
    Campground.findById(req.params.id).populate("comments").exec(function (err, foundCampground) {
        if (err) {
            console.log(err);
        } else {
            console.log(foundCampground);
            //render show template with that campground
            res.render("campgrounds/show", {campground: foundCampground});
        }
    });
});


router.get ("/:id/edit", middleware.checkCampgroundOwnership,function (req, res) {
    Campground.findById(req.params.id, function (err, foundcampground) {
        if (err) {
            res.redirect("/campgrounds")
        } else {
            res.render ("campgrounds/edit", {campground: foundcampground})
        }
    })
});

router.put ("/:id", middleware.checkCampgroundOwnership, function (req,res) {
    Campground.findByIdAndUpdate(req.params.id, req.body.campground, function (err,updatedcampground) {
        if (err) {
            res.redirect("/campgrounds")
        } else {
            res.redirect("/campgrounds/" + req.params.id)
        }

    })
});


router.delete("/:id", middleware.checkCampgroundOwnership, function (req,res) {
    Campground.findByIdAndRemove(req.params.id, function (err){
        if (err) {
            res.redirect("/campgrounds")
        } else {
            res.redirect("/campgrounds")
        }
    })
});
